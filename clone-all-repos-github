#!/bin/bash

ORG="$1"
TOKEN="$GH_TOKEN"

PAGE=1
PER_PAGE=100

# Base GitHub API URL
BASE_URL="https://api.github.com"

# Loop through all pages
while true; do
  # Make API request for the current page
  RESPONSE=$(curl -s -H "Authorization: token $TOKEN" "$BASE_URL/orgs/$ORG/repos?per_page=$PER_PAGE&page=$PAGE")

  # Check if the response contains any repositories
  if [[ $(echo "$RESPONSE" | jq '. | length') -eq 0 ]]; then
    break
  fi

  echo "$RESPONSE" | jq -r '.[] | .clone_url' | while read -r REPO_URL; do
    # Extract repo name from URL
    REPO_NAME=$(basename "$REPO_URL" .git)
    DIR=$REPO_NAME
    # Check if repo already exists locally
    if [ -d "$DIR" ]; then
      echo "Pulling latest changes for $REPO_NAME in $DIR ..."
      cd "$DIR" || continue
      git pull
      cd -
    else
      echo "Cloning $REPO_NAME..."
      git clone $(echo $REPO_URL | sed "s/github\.com/$TOKEN@github\.com/g")
    fi
  done

  # Check for the 'Link' header to see if there are more pages
  LINK_HEADER=$(curl -I -s -H "Authorization: token $TOKEN" "$BASE_URL/orgs/$ORG/repos?per_page=$PER_PAGE&page=$PAGE" | grep -i '^Link:')

  # If there is no 'Link' header or it does not contain 'rel="next"', we've reached the last page
  if [[ ! "$LINK_HEADER" =~ 'rel="next"' ]]; then
    break
  fi

  # Move to the next page
  PAGE=$((PAGE + 1))
done
